/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathquiz;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.io.IOException;
import java.io.FileWriter;
import java.net.SocketException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.LinkedList;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.BinaryTree;




public class MathQuizz_Teacher extends javax.swing.JFrame {

static ServerSocket serverSocket;
static Socket socket;
static DataInputStream dataInputStream;
static DataOutputStream dataOutputStream;

   private DefaultTableModel mathquiz_TableModel;
    
    private BinaryTree<Question> btMathQuestions;
    private static Question q;
    private static ArrayList<Question>arrayMathQuestions;
    private static LinkedList<Question>listMathQuestions;
    private Object [][] objDataSet;
    private String mathQues;

    public MathQuizz_Teacher()
    {  
       //intialise and set up customized table model
        String [] columnNames_MathQuiz = new String [] {"LOp", "op", "ROp", "=", "Ans"};
        Object[] defaultData_Bookings = {"", "", "", "", "" };
        mathquiz_TableModel = new DefaultTableModel();
        mathquiz_TableModel.setColumnIdentifiers(columnNames_MathQuiz);
        mathquiz_TableModel.addRow(defaultData_Bookings);
     
        q = null;
       arrayMathQuestions = new ArrayList<Question>();
       btMathQuestions = new BinaryTree<Question>();
       listMathQuestions = new LinkedList<Question>();
       objDataSet = null;
     
        initComponents();
        // customise column sizing for Bookings_JTable
        resizeBookingsColumns();
    
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Teacher_JPanel = new javax.swing.JPanel();
        Teacher_JLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        EnterSend_JLabel = new javax.swing.JLabel();
        FirstNumber_JLabel = new javax.swing.JLabel();
        Operator_JLabel = new javax.swing.JLabel();
        SecondNumber_JLabel = new javax.swing.JLabel();
        Answer_JLabel = new javax.swing.JLabel();
        firstNumber_JTextField = new javax.swing.JTextField();
        secondNumber_JTextField = new javax.swing.JTextField();
        answer_JTextField = new javax.swing.JTextField();
        Operator_JComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        bubble_JButton = new javax.swing.JButton();
        Twobubble_JButton = new javax.swing.JButton();
        Threebubble_JButton = new javax.swing.JButton();
        Send_JButton = new javax.swing.JButton();
        Exit_JButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Linkedlist_JLabel = new javax.swing.JLabel();
        Displaylist_JButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        Binarytree_JLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        Preorder_JLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        InOrder_JLabel = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        Postorder_JLabel = new javax.swing.JLabel();
        Predisplay_JButton = new javax.swing.JButton();
        Presave_JButton = new javax.swing.JButton();
        Indisplay_JButton = new javax.swing.JButton();
        Insave_JButton = new javax.swing.JButton();
        Postsave_JButton = new javax.swing.JButton();
        Postdisplay_JButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        binTree_JTextField = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        List_JTextField = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        mathquiz_JTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teacher");

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        Teacher_JPanel.setBackground(new java.awt.Color(51, 51, 255));

        Teacher_JLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Teacher_JLabel.setForeground(new java.awt.Color(255, 255, 255));
        Teacher_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Teacher_JLabel.setText("Teacher");

        javax.swing.GroupLayout Teacher_JPanelLayout = new javax.swing.GroupLayout(Teacher_JPanel);
        Teacher_JPanel.setLayout(Teacher_JPanelLayout);
        Teacher_JPanelLayout.setHorizontalGroup(
            Teacher_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Teacher_JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Teacher_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        Teacher_JPanelLayout.setVerticalGroup(
            Teacher_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Teacher_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        EnterSend_JLabel.setText("Enter question,then click Send");

        FirstNumber_JLabel.setText("First Number:");

        Operator_JLabel.setText("Operator:");

        SecondNumber_JLabel.setText("Second Number:");

        Answer_JLabel.setText("Answer");

        Operator_JComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+", "-", "/", "*" }));
        Operator_JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Operator_JComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstNumber_JLabel)
                            .addComponent(Operator_JLabel))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(firstNumber_JTextField))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(Operator_JComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(EnterSend_JLabel)
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SecondNumber_JLabel)
                            .addComponent(Answer_JLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(secondNumber_JTextField)
                            .addComponent(answer_JTextField))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(EnterSend_JLabel)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstNumber_JLabel)
                    .addComponent(firstNumber_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Operator_JLabel)
                    .addComponent(Operator_JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SecondNumber_JLabel)
                    .addComponent(secondNumber_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Answer_JLabel)
                    .addComponent(answer_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setText("Sort:");

        bubble_JButton.setText("1 - Bubble (asc)");
        bubble_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubble_JButtonActionPerformed(evt);
            }
        });

        Twobubble_JButton.setText("2 - Selection (desc)");
        Twobubble_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Twobubble_JButtonActionPerformed(evt);
            }
        });

        Threebubble_JButton.setText("3 - Insertion (asc)");
        Threebubble_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Threebubble_JButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bubble_JButton)
                .addGap(55, 55, 55)
                .addComponent(Twobubble_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(Threebubble_JButton)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Threebubble_JButton)
                    .addComponent(Twobubble_JButton)
                    .addComponent(bubble_JButton))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        Send_JButton.setText("Send");
        Send_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_JButtonActionPerformed(evt);
            }
        });

        Exit_JButton.setText("Exit");
        Exit_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_JButtonActionPerformed(evt);
            }
        });

        Linkedlist_JLabel.setText("    Linked List (of all in correctly answered exercise):");
        Linkedlist_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(Linkedlist_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Linkedlist_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Displaylist_JButton.setText("Display List");
        Displaylist_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Displaylist_JButtonActionPerformed(evt);
            }
        });

        Binarytree_JLabel.setText("    Binary Tree (of all question-added in order that they were asked):");
        Binarytree_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(Binarytree_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Binarytree_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(51, 51, 255));

        Preorder_JLabel.setForeground(new java.awt.Color(255, 255, 255));
        Preorder_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Preorder_JLabel.setText("Pre-Order");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(Preorder_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Preorder_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBackground(new java.awt.Color(0, 0, 255));

        InOrder_JLabel.setBackground(new java.awt.Color(255, 255, 255));
        InOrder_JLabel.setForeground(new java.awt.Color(255, 255, 255));
        InOrder_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        InOrder_JLabel.setText("In-Order");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(InOrder_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InOrder_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(51, 0, 255));

        Postorder_JLabel.setForeground(new java.awt.Color(255, 255, 255));
        Postorder_JLabel.setText("Post-Order");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(Postorder_JLabel)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Postorder_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        Predisplay_JButton.setText("Display");
        Predisplay_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Predisplay_JButtonActionPerformed(evt);
            }
        });

        Presave_JButton.setText("Save");
        Presave_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Presave_JButtonActionPerformed(evt);
            }
        });

        Indisplay_JButton.setText("Display");
        Indisplay_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Indisplay_JButtonActionPerformed(evt);
            }
        });

        Insave_JButton.setText("Save");
        Insave_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insave_JButtonActionPerformed(evt);
            }
        });

        Postsave_JButton.setText("Save");
        Postsave_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Postsave_JButtonActionPerformed(evt);
            }
        });

        Postdisplay_JButton.setText("Display");
        Postdisplay_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Postdisplay_JButtonActionPerformed(evt);
            }
        });

        binTree_JTextField.setColumns(20);
        binTree_JTextField.setRows(5);
        jScrollPane7.setViewportView(binTree_JTextField);

        jScrollPane3.setViewportView(jScrollPane7);

        List_JTextField.setColumns(20);
        List_JTextField.setRows(5);
        jScrollPane4.setViewportView(List_JTextField);

        jScrollPane2.setViewportView(jScrollPane4);

        mathquiz_JTable.setModel(mathquiz_TableModel);
        jScrollPane1.setViewportView(mathquiz_JTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Predisplay_JButton)
                                        .addGap(32, 32, 32)
                                        .addComponent(Presave_JButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Indisplay_JButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(Insave_JButton)))
                                .addGap(172, 172, 172)
                                .addComponent(Postdisplay_JButton)
                                .addGap(18, 18, 18)
                                .addComponent(Postsave_JButton)))
                        .addGap(155, 155, 155))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Displaylist_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Send_JButton)
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(59, 59, 59)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Exit_JButton)
                                                .addGap(16, 16, 16))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(48, 48, 48)
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Teacher_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(Teacher_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Send_JButton)
                    .addComponent(Exit_JButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Displaylist_JButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Postsave_JButton)
                            .addComponent(Postdisplay_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Insave_JButton)
                            .addComponent(Indisplay_JButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Presave_JButton)
                                .addComponent(Predisplay_JButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void Postdisplay_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Postdisplay_JButtonActionPerformed
         //Display preorder binary tree traversal
        if (btMathQuestions.size() > 0)
        {
            String postOrderStr = "POST-ORDER: ";
            btMathQuestions.reSetTraversalString();
            btMathQuestions.postOrder(btMathQuestions.getRoot());
            postOrderStr += btMathQuestions.getTraversalString();
             binTree_JTextField.setText( postOrderStr );
            
       }
        else
        {
            binTree_JTextField.setText("There are no match");
        }
    }//GEN-LAST:event_Postdisplay_JButtonActionPerformed

    private void Send_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_JButtonActionPerformed
     // Send math question to student (client) app
     String mathQues = "";
     String operator =Operator_JComboBox.getSelectedItem().toString();
     int number1;
     int number2;
     try
     {
         // FirstNumber_JTextField
         number1 = Integer.parseInt(firstNumber_JTextField.getText());
                 // SecondNumber_JTextField
         number2 = Integer.parseInt(secondNumber_JTextField.getText());
         
 
 String messageOut = "";
 
 // display message sent from server to client
 List_JTextField.setText(List_JTextField.getText()
+ "\n Server: " + messageOut);
 // clear send text field
 List_JTextField.setText("");
 

     }
                 
     
     catch (Exception e)
     {
       String exceptionStr =  "ERROR one or both numbers" + e.getMessage();
         
         JOptionPane.showMessageDialog(null, exceptionStr, "SERVER SEND ERROR", JOptionPane.ERROR_MESSAGE);
                 return;

                 
     }
     // result
     
     int result = -999;
     if (Operator_JComboBox.getSelectedItem().toString().equals("+"))
     {
      result = number1 + number2;   
     }
     
       else  if (Operator_JComboBox.getSelectedItem().toString().equals("-"))
     {
      result = number1 - number2;   
     }
      else  if (Operator_JComboBox.getSelectedItem().toString().equals("/"))
     {
      result = number1 / number2;  
     }
      else  if (Operator_JComboBox.getSelectedItem().toString().equals("*"))
     {
      result = number1 * number2;   
     }
     Integer resultInterger = result;
     answer_JTextField.setText(resultInterger.toString());
          q= new Question (number1, operator, number2, result);
          mathQues = number1 +  " " + operator + " " + number2 + " = " + result;
          System.out.println(mathQues);
     
      // add to arrayMathQuestions and Binary BtMathQuestions
      arrayMathQuestions.add(q);
      btMathQuestions.add(q);
      
      String binTreeTextField = binTree_JTextField.getText();
     binTree_JTextField.setText(binTreeTextField + "\n" + mathQues);
     
     
   
    displayTable();
   Send_JButton.setEnabled(false);
    try {
        dataOutputStream.writeUTF(mathQues);
    } catch (IOException ex) {
        Logger.getLogger(MathQuizz_Teacher.class.getName()).log(Level.SEVERE, null, ex);
    }
    
        
    

    
     
     
   
    
    
    }//GEN-LAST:event_Send_JButtonActionPerformed

    private void bubble_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubble_JButtonActionPerformed
        // TODO add your handling code here:
        
        if (arrayMathQuestions.size() > 0)
        {
            bubbleSort("asc");
            displayTable();
        }
    }//GEN-LAST:event_bubble_JButtonActionPerformed

    private void Twobubble_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Twobubble_JButtonActionPerformed
        // TODO add your handling code here:
         if (arrayMathQuestions.size() > 0)
        {
            selectionSort("desc");
            displayTable();
        }
    }//GEN-LAST:event_Twobubble_JButtonActionPerformed

    private void Threebubble_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Threebubble_JButtonActionPerformed
        // TODO add your handling code here:
         if (arrayMathQuestions.size() > 0)
        {
            InsertionSort("asc");
            displayTable();
        }
    }//GEN-LAST:event_Threebubble_JButtonActionPerformed

    private void Predisplay_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Predisplay_JButtonActionPerformed
        // TODO add your handling code here:
        // Diplay Preorder binary tree traversal
        if (btMathQuestions.size() > 0)
        {
            String preOrderDisplay = "PRE-ORDER: ";
            btMathQuestions.reSetTraversalString();
            btMathQuestions.preOrder(btMathQuestions.getRoot());
            preOrderDisplay += btMathQuestions.getTraversalString();
            binTree_JTextField.setText(preOrderDisplay );
        }
        else
        {
            binTree_JTextField.setText("There are no match");
        }
    }//GEN-LAST:event_Predisplay_JButtonActionPerformed

    private void Presave_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Presave_JButtonActionPerformed
       //Display preorder binary tree traversal
        if (btMathQuestions.size() > 0)
        {
            String preOrderStr = "PRE-ORDER: ";
            btMathQuestions.reSetTraversalString();
            btMathQuestions.preOrder(btMathQuestions.getRoot());
            preOrderStr += btMathQuestions.getTraversalString();
            writeToFile ("mathquiz/preorder.txt", preOrderStr);
            
        }
    }//GEN-LAST:event_Presave_JButtonActionPerformed

    private void Indisplay_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Indisplay_JButtonActionPerformed
        // TODO add your handling code here:
         //Display preorder binary tree traversal
        if (btMathQuestions.size() > 0)
        {
            String inOrderDisplay = "IN-ORDER: ";
            btMathQuestions.reSetTraversalString();
            btMathQuestions.inOrder(btMathQuestions.getRoot());
            inOrderDisplay += btMathQuestions.getTraversalString();
             binTree_JTextField.setText(inOrderDisplay);
                    
       }
        else
        {
            binTree_JTextField.setText("There are no match");
        }
        
    }//GEN-LAST:event_Indisplay_JButtonActionPerformed

    private void Insave_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insave_JButtonActionPerformed
        // save inorder binary tree traversal
        if (btMathQuestions.size() > 0)
        {
            String inOrderStr = "IN-ORDER: ";
            btMathQuestions.reSetTraversalString();
            btMathQuestions.inOrder(btMathQuestions.getRoot());
            inOrderStr += btMathQuestions.getTraversalString();
            writeToFile ("mathquiz/inorder.txt", inOrderStr);
        }
        
    }//GEN-LAST:event_Insave_JButtonActionPerformed

    private void Displaylist_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Displaylist_JButtonActionPerformed
      if (listMathQuestions.size() > 0)
      {
          String listDisplay = "HEAD <-> ";
          for (int i = 0; i < listMathQuestions.size(); i++)
          {
              listDisplay += listMathQuestions.get(i).toString() + "<->";
          }
          listDisplay += " TAIL";
          List_JTextField.setText(listDisplay);
      }
      else
      {
          List_JTextField.setText("There are no incorrectly ansered questions"); 
      }
        
    }//GEN-LAST:event_Displaylist_JButtonActionPerformed

    private void Exit_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_JButtonActionPerformed
          try
          {
              serverSocket.close();
          }
          catch(IOException e){
               JOptionPane.showMessageDialog(null, e.getMessage(), "SOCKET TERMINATION ERROR", JOptionPane.ERROR_MESSAGE);
          }
        setVisible(false);
           dispose();
           System.exit(0);
    }//GEN-LAST:event_Exit_JButtonActionPerformed

    private void Operator_JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Operator_JComboBoxActionPerformed
          
           
    }//GEN-LAST:event_Operator_JComboBoxActionPerformed

    private void Postsave_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Postsave_JButtonActionPerformed
        // TODO add your handling code here:
         // save inorder binary tree traversal
        if (btMathQuestions.size() > 0)
        {
            String PostOrderStr = "POST-ORDER: ";
            btMathQuestions.reSetTraversalString();
            btMathQuestions.postOrder(btMathQuestions.getRoot());
            PostOrderStr += btMathQuestions.getTraversalString();
            writeToFile ("mathquiz/postorder.txt", PostOrderStr);
        }
        
    }//GEN-LAST:event_Postsave_JButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MathQuizz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MathQuizz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MathQuizz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MathQuizz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MathQuizz_Teacher().setVisible(true);
            }
        });
       try
        {
        serverSocket = new ServerSocket(1201);
        socket = serverSocket.accept();
        dataInputStream = new DataInputStream(socket.getInputStream());
        dataOutputStream = new DataOutputStream(socket.getOutputStream());
        String messageIn = "";
        while(! messageIn.equals("exit")) 
        {
            
        messageIn = dataInputStream.readUTF();
        if (messageIn.equals("y"))
        {
            //student got the math question right
            Send_JButton.setEnabled(true);
            List_JTextField.setText("Student answered correctly");
        }
        else if (messageIn.equals("n"))
        {
          //student got the math question wrong
            listMathQuestions.add(q);
            Send_JButton.setEnabled(true);
            List_JTextField.setText("Student answered incorrectly");
        }
        else
        {
        firstNumber_JTextField.setText("");
        secondNumber_JTextField.setText("");
        answer_JTextField.setText("");
        Send_JButton.setEnabled(true);
        }
        }
    }
    catch (SocketException e)
    {
    String exceptionStr = "Server Socket Error: " + e.getMessage();
    JOptionPane.showMessageDialog(null, exceptionStr, "SERVER ERROR", JOptionPane.ERROR_MESSAGE);
    }
    catch(Exception e)
    {
    String exceptionStr = "Server Error: " + e.getMessage();
    JOptionPane.showMessageDialog(null, exceptionStr, "SERVER ERROR", JOptionPane.ERROR_MESSAGE);
}
    } 
    public static int [] getRandArray (int min, int max, int size)
        {
            int[] randArray = new int[size];
            Random random = new Random();
            int i = 0;
            while (i < size)
            {
                int randomNbr = random.nextInt(max - min + 1) + min;
                // check if randomNbr not already chosen - no duplicates!
                int pos = Arrays.asList(randArray).indexOf(randomNbr);
                if (pos > -1)
                {
                    // randomNbr already exists in array
                }
                else
                {
                    // randomNbr doesn't exist in array
                    randArray[i] = randomNbr;
                    i++;
                }
            }
            return randArray;

        } // end GetRandArray()

    private void resizeBookingsColumns() {
        
        // "LOp", "op", "ROp", "=", "Ans"
        {float[] columnWidthPercentage = {0.15f, 0.25f, 0.25f, 0.25f, 0.25f};
        // Use TableColumnModel.getTotalColumnWidth() if your table is included in a JScrollPane
        int tW = mathquiz_JTable.getWidth();
        javax.swing.table.TableColumn column;
        javax.swing.table.TableColumnModel jTableColumnModel = mathquiz_JTable.getColumnModel();
        int nbrCols = jTableColumnModel.getColumnCount();
        for (int i = 0; i < nbrCols; i++) 
        {
            column = jTableColumnModel.getColumn(i);
            int pWidth = Math.round(columnWidthPercentage[i] * tW);
            column.setPreferredWidth(pWidth);
           
        }
    }
       
    }
private void writeToFile (String fileName, String stringToWrite)
{
    int yesOrNo = javax.swing.JOptionPane.showConfirmDialog(null, 
            "You are about to write " + stringToWrite + " to the external file: " );
    if (yesOrNo == javax.swing.JOptionPane.NO_OPTION)
    {
        System.out.println("Ok not writing to" + fileName);
    }
    else
    {
        try
        {
            FileWriter myWriter = new FileWriter(fileName);
            myWriter.write(stringToWrite);
            myWriter.close();
            System.out.println("Successfully written");
            
        }
          catch (Exception e)
        {
            System.out.println("Successfully written");
        }
    }
            
}

    private void displayTable() {
        // exit if arrayMathQuestion is null
        if (arrayMathQuestions.size() == 0)
        {
           return; 
        }
        // Convert arraylist to fixed array
        Question [] quizzes = arrayMathQuestions.toArray(new Question[arrayMathQuestions.size()]);
       
             // remove all existing rows
               if (mathquiz_TableModel.getRowCount() > 0)
               {
                   for (int i = mathquiz_TableModel.getRowCount() - 1; i > -1; i--)
                   {
                       mathquiz_TableModel.removeRow(i);
                   }
               }
              
                  // add to tableModel
                 Object [] obj = new Object[5];
                objDataSet = new Object[arrayMathQuestions.size()][];
                for(int i = 0; i < arrayMathQuestions.size(); i++) {
                  // Code similar to Big Blue Read will go here.
                  obj[0] = arrayMathQuestions.get(i).getLop() ;
                     obj[1] = arrayMathQuestions.get(i).getOperator();
                         obj[2] = arrayMathQuestions.get(i).getROp();
                          obj[3] = "=";
                          obj[4] = arrayMathQuestions.get(i).getAnswer();
        
                        objDataSet[i] = obj;
                        mathquiz_TableModel.addRow(objDataSet[i]);
                }
                   // update
                   mathquiz_TableModel.fireTableDataChanged();         
           }
            
    


    

  /*************************************************************************************************************/
/***************************************** BUBBLE SORT ALGORITHM **********************************************/ 
/*************************************************************************************************************/

static void bubbleSort(String order) 
{
if (arrayMathQuestions.size() == 0)
{
    return;
}
// Convert arraylist to fixed array
Question [] quizzes = arrayMathQuestions.toArray(new Question[arrayMathQuestions.size()]);

// sort fixed array
for (int i= 0; i < quizzes.length; i++)
{
   for (int j= 0; j < quizzes.length - 1; j++)
   {
       if (order == "asc")
       {
           if (quizzes[i].compareTo(quizzes[j]) < 0)
           {
               // swap values
               Question temp = quizzes[i];
               quizzes[i] = quizzes[j];
               quizzes[j] = temp;
           }
       }
      else if (order == "desc")
       {
           if (quizzes[i].compareTo(quizzes[j]) < 0)
           {
              // swap values
               Question temp = quizzes[i];
               quizzes[i] = quizzes[j];
               quizzes[j] = temp;
           }
       }
       
   }
}
        // ressign arrayMathQuestions
        arrayMathQuestions = new ArrayList<Question>(Arrays.asList(quizzes));
    }
 
  /*************************************************************************************************************/
/***************************************** SELECTION SORT ALGORITHM **********************************************/ 
/*************************************************************************************************************/
    private static void selectionSort(String order ) 
 {
if (arrayMathQuestions.size() == 1)
{
    return;
}
// Convert arraylist to fixed array
Question [] quizzes = arrayMathQuestions.toArray(new Question[arrayMathQuestions.size()]);

for (int i = 0; i < quizzes.length - 1; i++)
        {
            //int selectedIndex = i;

            for (int j = i + 1; j < quizzes.length; j++)
            {
                if (order == "asc")
                {
                    if (quizzes[j].compareTo(quizzes[i])< 0)
                    {
                        Question temp = quizzes[j];
                       quizzes[j] =quizzes[i];
                        quizzes[i] = temp;
                        
                    }
                }
                else if (order == "desc")
                {
                   if (quizzes[j].compareTo(quizzes[i]) > 0)
                    {
                       Question temp = quizzes[j];
                        quizzes[j] = quizzes[i];
                        quizzes[i] = temp;
                       
                    }
                }

            }
        }
        // ressign arrayMathQuestions
        arrayMathQuestions = new ArrayList<Question>(Arrays.asList(quizzes));
    
 
    }

  /*************************************************************************************************************/
/***************************************** INSERTION SORT ALGORITHM **********************************************/ 
/*************************************************************************************************************/
    private static void InsertionSort(String order) 
    {
    if (arrayMathQuestions.size() == 1)
{
    return;
}
// Convert arraylist to fixed array
Question [] quizzes = arrayMathQuestions.toArray(new Question[arrayMathQuestions.size()]);

// sort fixed array
  for (int i = 1; i < quizzes.length; i++)
        {
            for (int j = i; j > 0; j--)
            {
                if (order == "asc")
                {
                    if (quizzes[j] .compareTo(quizzes[j - 1])<0)
                    {
                        Question temp = quizzes[j];
                        quizzes[j] = quizzes[j - 1];
                        quizzes[j - 1] = temp;
                        
                    }
                }
                else if (order == "desc")
                {
                    if (quizzes[j] .compareTo(quizzes[j - 1])>0)
                    {
                       Question temp = quizzes[j];
                        quizzes[j] = quizzes[j - 1];
                       quizzes[j - 1] = temp;
                        
                    }
                }
            }

        }
        // ressign arrayMathQuestions
        arrayMathQuestions = new ArrayList<>(Arrays.asList(quizzes));
    
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Answer_JLabel;
    private javax.swing.JLabel Binarytree_JLabel;
    private javax.swing.JButton Displaylist_JButton;
    private javax.swing.JLabel EnterSend_JLabel;
    private javax.swing.JButton Exit_JButton;
    private javax.swing.JLabel FirstNumber_JLabel;
    private javax.swing.JLabel InOrder_JLabel;
    private javax.swing.JButton Indisplay_JButton;
    private javax.swing.JButton Insave_JButton;
    private javax.swing.JLabel Linkedlist_JLabel;
    private static javax.swing.JTextArea List_JTextField;
    private javax.swing.JComboBox<String> Operator_JComboBox;
    private javax.swing.JLabel Operator_JLabel;
    private javax.swing.JButton Postdisplay_JButton;
    private javax.swing.JLabel Postorder_JLabel;
    private javax.swing.JButton Postsave_JButton;
    private javax.swing.JButton Predisplay_JButton;
    private javax.swing.JLabel Preorder_JLabel;
    private javax.swing.JButton Presave_JButton;
    private javax.swing.JLabel SecondNumber_JLabel;
    private static javax.swing.JButton Send_JButton;
    private javax.swing.JLabel Teacher_JLabel;
    private javax.swing.JPanel Teacher_JPanel;
    private static javax.swing.JButton Threebubble_JButton;
    private static javax.swing.JButton Twobubble_JButton;
    private static javax.swing.JTextField answer_JTextField;
    private static javax.swing.JTextArea binTree_JTextField;
    private static javax.swing.JButton bubble_JButton;
    private static javax.swing.JTextField firstNumber_JTextField;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private static javax.swing.JTable mathquiz_JTable;
    private static javax.swing.JTextField secondNumber_JTextField;
    // End of variables declaration//GEN-END:variables

    private void availability(String string) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

  
    
  
}


